# Workflow for deploying WoundGuard to GitHub Pages
name: Deploy WoundGuard to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Create models directory
        run: mkdir -p dist/models
      - name: Download ML models
        run: |
          # Download lite model (replace URL with actual model location)
          curl -L https://huggingface.co/spaces/medical-models/wound-segmentation/resolve/main/model-optimized-quant-lite.onnx -o dist/models/wound-segmentation-lite.onnx || echo "Warning: Lite model download failed, using placeholder"
          # Create placeholder if download fails
          if [ ! -f dist/models/wound-segmentation-lite.onnx ]; then
            echo "Creating placeholder model file"
            touch dist/models/wound-segmentation-lite.onnx
          fi
      - name: Build
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4